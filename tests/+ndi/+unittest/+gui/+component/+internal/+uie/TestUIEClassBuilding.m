% TestUIEClassBuilding.m
classdef TestUIEClassBuilding < matlab.unittest.TestCase
    % TESTUIECLASSBUILDING Verifies that all uie.* classes can be constructed.
    %
    %   This test ensures that each UI element and mixin class can be
    %   instantiated without syntax errors or errors in their respective
    %   constructors. It does not test method functionality or property
    %   interactions.

    methods(Test)
        function testAllClassesCanBeInstantiated(testCase)
            % This test attempts to construct one of every uie.* class.
            % A failure here indicates a syntax error or a bug in a class
            % constructor. Note that UIElement is correctly excluded as it is
            % designed to throw an error upon direct instantiation.

            % Define all class names to be tested
            classNames = { ...
                'ndi.gui.component.internal.uie.UIButton', ...
                'ndi.gui.component.internal.uie.UICheckbox', ...
                'ndi.gui.component.internal.uie.UIContextMenu', ...
                'ndi.gui.component.internal.uie.UIDropdown', ...
                'ndi.gui.component.internal.uie.UIEditField', ...
                'ndi.gui.component.internal.uie.UIFigure', ...
                'ndi.gui.component.internal.uie.UIGridLayout', ...
                'ndi.gui.component.internal.uie.UILabel', ...
                'ndi.gui.component.internal.uie.UIListbox', ...
                'ndi.gui.component.internal.uie.UIPanel', ...
                'ndi.gui.component.internal.uie.UITab', ...
                'ndi.gui.component.internal.uie.UITabGroup', ...
                'ndi.gui.component.internal.uie.UITextArea', ...
                ...
                'ndi.gui.component.internal.uie.mixin.UIBorderType', ...
                'ndi.gui.component.internal.uie.mixin.UIContainer', ...
                'ndi.gui.component.internal.uie.mixin.UIDoubleClickFcn', ...
                'ndi.gui.component.internal.uie.mixin.UIEditable', ...
                'ndi.gui.component.internal.uie.mixin.UIHorizontalAlignment', ...
                'ndi.gui.component.internal.uie.mixin.UIIconComponent', ...
                'ndi.gui.component.internal.uie.mixin.UIInteractiveComponent', ...
                'ndi.gui.component.internal.uie.mixin.UIItems', ...
                'ndi.gui.component.internal.uie.mixin.UILayout', ...
                'ndi.gui.component.internal.uie.mixin.UIMultiselect', ...
                'ndi.gui.component.internal.uie.mixin.UIPlaceholder', ...
                'ndi.gui.component.internal.uie.mixin.UIText', ...
                'ndi.gui.component.internal.uie.mixin.UITextComponent', ...
                'ndi.gui.component.internal.uie.mixin.UITitle', ...
                'ndi.gui.component.internal.uie.mixin.UIValue', ...
                'ndi.gui.component.internal.uie.mixin.UIValueChangedFcn', ...
                'ndi.gui.component.internal.uie.mixin.UIValueChangingFcn', ...
                'ndi.gui.component.internal.uie.mixin.UIVerticalAlignment', ...
                'ndi.gui.component.internal.uie.mixin.UIVisualComponent', ...
                'ndi.gui.component.internal.uie.mixin.UIWordWrap' ...
            };

            for i = 1:numel(classNames)
                className = classNames{i};
                
                % Use a subtest for each class so that a failure on one
                % does not prevent others from being tested.
                testCase.subTest(sprintf('Testing %s', className), ...
                    @() testCase.verifyClass(feval(className), className));
            end
        end
    end
end